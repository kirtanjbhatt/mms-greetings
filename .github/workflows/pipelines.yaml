name: Build and publish

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'deploy/**'
      - '.github/workflows/promote-pipeline.yaml'

env:
  PROJECT_ID: ${{secrets.MMS_GKE_PROJECT}}    
  IMAGE: mms-greetings-image
  TAG1: ${(git rev-parse --short "$GITHUB_SHA")}

jobs:
  setup-build-publish:
    name: setup-build-publish
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.step6.outputs.TAG }}
    steps:

      - name: Checkout Repository
        id: step1
        uses: actions/checkout@v2          

      - name: Setup JDK 1.8
        id: step2
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Build with Maven
        id: step3
        run: mvn clean package -DskipTests

      - name: Setup Google Cloud CLI
        id: step4
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true          
        with:
          service_account_key: ${{secrets.MMS_GKE_SA_KEY}}
          project_id: ${{secrets.MMS_GKE_PROJECT}}

      - name: Configure Docker
        id: step5
        run: |-
          gcloud --quiet auth configure-docker

      - name: Build Docker Image and push to GCR
        id: step6
        run: |-
          # Build a docker container and push it to ECR

          export TAG=$(git rev-parse --short "$GITHUB_SHA")
          echo "Pushing image to GCR..." + $TAG
          docker build --tag "gcr.io/$PROJECT_ID/$IMAGE:$TAG" .
          echo "::set-output name=image::gcr.io/$PROJECT_ID/$IMAGE:$TAG"
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$TAG"
          GITHUB_OUTPUT=TAG
          echo "TAG=$TAG" >> "$GITHUB_OUTPUT"
          
  prepare-deploy-to-dev:
    name: prepare-deploy-to-dev
    runs-on: ubuntu-latest
    needs: setup-build-publish
    environment: dev
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2  

      - name: Commit image tag for deployment
        env: 
          TAG: ${{needs.prepare-deploy-to-dev.outputs.TAG}}
        run: |-       
          cd deploy/dev  
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize   
          echo "Do I know correct tag..." + $TAG              
          git pull
          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$TAG
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git add kustomization.yaml
          git commit -m "image tag updated: $TAG"
          git push
          
  promote-to-prod:
    name: promote-to-prod
    runs-on: ubuntu-latest
    needs: [setup-build-publish, prepare-deploy-to-dev]
    environment: prod
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2  

      - name: Commit image tag for deployment\
        env: 
          TAG: ${{needs.prepare-deploy-to-dev.outputs.TAG}}
        run: |-        
          cd deploy/prod  
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize                
          echo "Do I know correct tag..." + $TAG
          git pull
          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$TAG
          cat kustomization.yaml
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git add kustomization.yaml
          git commit -m "image tag updated: $TAG"
          git push


